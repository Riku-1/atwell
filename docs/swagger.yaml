definitions:
  domain.Tweet:
    properties:
      comment:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
info:
  contact: {}
  description: This is a api sample project using  golang.
  title: golang-sample-api
  version: "1.0"
paths:
  /tweets:
    get:
      consumes:
      - application/json
      description: get tweets from database
      operationId: get-tweets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Tweet'
            type: array
    post:
      consumes:
      - application/json
      description: create new tweet.
      operationId: post-tweets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tweet'
  /tweets/{id}:
    delete:
      consumes:
      - application/json
      description: delete new tweet.
      operationId: delete-tweets-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
swagger: "2.0"
