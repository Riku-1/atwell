definitions:
  domain.Tweet:
    properties:
      comment:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  web.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
  description: Atwell is a Twitter for one person.
  title: atwell
  version: 0.1.0
paths:
  /tweets:
    get:
      consumes:
      - application/json
      description: Get tweets from database
      operationId: get-tweets
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: tweets search between 'from' value and 'to' value
        in: query
        name: from
        required: true
        type: string
      - description: tweets search between 'from' value and 'to' value
        in: query
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Tweet'
            type: array
      security:
      - ApiKeyAuth: []
    post:
      consumes:
      - application/json
      description: create new tweet.
      operationId: post-tweets
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: comment is tweet content
        in: formData
        name: comment
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tweet'
      security:
      - ApiKeyAuth: []
  /tweets/{id}:
    delete:
      consumes:
      - application/json
      description: delete new tweet.
      operationId: delete-tweets-id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
  /yahoo-japan/before-login:
    post:
      consumes:
      - application/json
      description: creates temporary session which contains nonce for auth.
      operationId: post-yahoo-japan-before-login
      parameters:
      - description: nonce for yahoo japan authorization
        in: formData
        name: nonce
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
  /yahoo-japan/login:
    post:
      consumes:
      - application/json
      description: login by using yahoo japan authorization.
      operationId: post-yahoo-japan-login
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: yahoo japan authorization code
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      security:
      - ApiKeyAuth: []
  /yahoo-japan/sign-up:
    post:
      consumes:
      - application/json
      description: create account for user by using yahoo japan authorization.
      operationId: post-yahoo-japan-sign-up
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: authorization code
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      security:
      - ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
